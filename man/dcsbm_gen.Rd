% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sbm_dcbm_gen.R
\name{dcsbm_gen}
\alias{dcsbm_gen}
\title{SBM or DCBM Network Generator}
\usage{
dcsbm_gen(
  n,
  K,
  B = NULL,
  sparsity = NULL,
  out_in_ratio = NULL,
  sbm = TRUE,
  psi = NULL,
  PI = rep(1/K, K),
  ncore = max(floor(parallel::detectCores()/2), 1)
)
}
\arguments{
\item{n}{Number of nodes}

\item{K}{Number of communities}

\item{B}{K \eqn{\times} K community connectivity matrix}

\item{sparsity}{Sparsity of the network, used to compute B if B is not provided.}

\item{out_in_ratio}{Ratio of out-community to in-community connections, used to compute B if B is not provided. B is computed as sparsity * (diag(1 - out_in_ratio, K, K) + matrix(out_in_ratio, K, K)).}

\item{sbm}{Logical flag indicating whether the network is generated from SBM (TRUE) or DCBM (FALSE). If sbm = TRUE, psi is ignored and set to rep(1, n).}

\item{psi}{\eqn{\psi} Vector of length n containing the degree correction parameter for DCBM.}

\item{PI}{Vector of length K containing the community membership probabilities. Defaults to equal proportions.}

\item{ncore}{Number of processors to use for parallel processing. Defaults to half the number of detected cores.}
}
\value{
A list containing the adjacency matrix (A), community memberships (g), and the scaled psi values.

A sparse adjacency matrix of size n x n. \eqn{A_{ij} \sim} Bernoulli\eqn{\left(B(g_i, g_j) \psi_i \psi_j\right)}.

g Vector of length n containing the community memberships for each node. Communities are sampled from 1:K with replacement using probabilities in PI.

psi Vector of length n containing the scaled degree correction parameter for each node. psi is scaled such that the maximum value for each community is 1.
}
\description{
SBM or DCBM generator
Generates network data from SBM or DCBM
}
\examples{
dcsbm_gen(n = 100, K = 5, sparsity = 0.5, out_in_ratio = 0.1, sbm = TRUE)
}
